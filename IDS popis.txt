В юс-кейс діаграмі ми маємо 4 актори, це ті люди, які мають право проводити якісь зміни в інфоромаційній системі. 
Customer має право заповнювати інформацію про себе, здійснювати резервацію і редагувати її. Заповнення інформації про себе ми маємо, як <<include>> резервації, тому що резервація включає в себе заповнення інформації про customer, але також і номер столика чи зал, дату і час. Редагування резервації ми маємо, як розширення для створення резервації. Не можна редагувати резервацію, якщо її ще немає, редагування резервації не є обов'язковим. Редагування резервації може означати зміну столика, залу, дати, часу або відміна резервації.
Waiter має право редагувати запит. Редагування запиту означає для офіціанта його створення при прийнятті замовлення у гостей, можливість змін існуючих страв і додавання інших або скасування замовлення.
Kitchen staff в інформаційній системі отримує і переглядає інформацію про замовлення створене клієнтом для того, щоб знати, які страви має готувати.
Receptionist може підтверджувати і скасовувати резервацію.

В ER-Diagram  ми маємо 9 ентіт. 
Ентіта staff зв'язана зв'язком generalizace-specializace з ентітами kitchen staff, waiter, customer, тому що кожен з них є staff, але при цьому у них є також унікальні для ентіти аргументи і різні зв'язки з іншими ентітами. Primary key для всіх ентіт є id_stuff.
Ентіта kitchen stuff має зв'язок "get info"з ентітою reguest. Кожен працівник кухні може переглянути від 0 до N замовлень, кожне замовлення може переглянути від 1 до N працівників кухні, для того, щоб ресторан працював, щонаймешне 1 кухар повинен переглянути замовлення, адже без цього він не може його готувати, але водночас необмежена кількість кухарів може переглядати це замовлення.
Ентіта waiter має зв'язок "edit" з ентітою reguest. Кожен офіціант може редагувати від 0 до N замовлень, редагування може означати створення запиту після того, як приняв замовлення у відвідувача, і може редагувати аргументи dishes, status, підраховувати і записувати аргумент price.Кожне замовлення може змінювати від 1 до N офіціантів. Щонайменше 1 мусить, але може й більше. 
Ентіта request має 2 зв'язки з ентітою customer: "make" й "edit". Це означає створення замовлення і його редагування. Кожен клієнт може створити від 0 до N замовлення, але кожне замовлення може створити тільки 1 клієнт. Кожен клієнт може редагувати від 0 до N замовлень, але кожне замовлення може редагувати від 0 до 1 клієнтів, тому що 1 замовлення максимально може редагувати 1 клієнт, але він не мусить цього робити.
Ентіта reservation зв'язана зв'язком generalizace-specializace з ентітами personal table й Vip-hall, тому що кожен з них є reservation, але при цьому у них є також унікальні для ентіти аргументи. Primary key для всіх ентіт є id_reservation.
Ентіта customer має 2 зв'язки з ентітою reservation: "do" й "edit". Це означає створення резервації і її редагування. Кожен клієнт може створити від 0 до N резервацій, але кожну резервацію може створити тільки 1 клієнт. Кожен клієнт може редагувати від 0 до N резервацій, але кожну резервацію може редагувати від 0 до 1 клієнтів, тому що 1 резервацію максимально може редагувати 1 клієнт, але він не мусить цього робити.
Ентіта receptionist має зв'язок "confirm" з ентітою reservation. Кожен рецептіоніст може підтвердити від 0 до  резервацій. Кожну резервацію може підтвердити тільки 1 рецептіоніст. Якщо рецептіоніст не відтверджує резервацію, у резервації змінюється статус на "unsuccessful".


